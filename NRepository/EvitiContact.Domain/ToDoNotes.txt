1. Try adding internal or protected items to the entity items set and then use "Domain Services" to update the properties
    The though here would be to not allow any items outside the assembly to 'set' values
    You could then follow DDD easer and still use code generation

2. Change external list to IReadOnlyList

3. Fix global validation handling to us the API response to format API validation errors

4. Implement the decorator pattern 
    - https://andrewlock.net/adding-decorated-classes-to-the-asp.net-core-di-container-using-scrutor/
    - https://github.com/ardalis/CachedRepository/blob/c0e3db0307be2ac8d757a7605a29ece86a10a9c7/src/CachedRepoSample/Data/Repositories/CachedAuthorRepositoryDecorator.cs
    services.AddScoped<AuthorRepository>();
    services.AddScoped<IAuthorRepository, CachedAuthorRepository>();

5. Check out this for caching
    - https://www.hanselman.com/blog/UsingLazyCacheForCleanAndSimpleNETCoreInmemoryCaching.aspx
    - https://github.com/alastairtree/LazyCache?WT.mc_id=-blog-scottha
    - https://ardalis.com/building-a-cachedrepository-in-aspnet-core
    - https://github.com/ardalis/CachedRepository/blob/c0e3db0307be2ac8d757a7605a29ece86a10a9c7/src/CachedRepoSample/Data/Repositories/CachedAuthorRepositoryDecorator.cs

6. Domain services live in the domain project and work on changing state
   The Data Later is used outside the Domain services to configuration EF core.
   THe application service layer use the Data layer and the Domain layer to "wire up" the logic
   All business logic should be in the Domain layer and we should strive to keep it there.  
        See and use the specification pattern to help encapsulate the domain layer logic
   The Domain layer should define the interfaces for the repositories


7.   // Looks like bool are a problem for the tracking framework.  We can only support nullable bools
        // because if we have a true field, we default to false, get an update to set the field to false
        // the tracking framework comparison will not "see" the tracking change.  Changing them to 
        // nullable bools will work, until i find a reason why it will not, as it passed items on to 
        // EF core
